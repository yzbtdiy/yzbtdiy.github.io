import{_ as s,c as a,o as i,a5 as e}from"./chunks/framework.ByOCcFwP.js";const u=JSON.parse('{"title":"css 盒子模型","description":"","frontmatter":{"title":"css 盒子模型","date":"2019-12-08T14:16:09.000Z","categories":"css","tags":["css","box"]},"headers":[],"relativePath":"frontend/css/box-model.md","filePath":"frontend/css/box-model.md"}'),l={name:"frontend/css/box-model.md"},t=e(`<h2 id="盒子属性" tabindex="-1">盒子属性 <a class="header-anchor" href="#盒子属性" aria-label="Permalink to &quot;盒子属性&quot;">​</a></h2><h3 id="边框-border" tabindex="-1">边框-border <a class="header-anchor" href="#边框-border" aria-label="Permalink to &quot;边框-border&quot;">​</a></h3><h4 id="复合属性" tabindex="-1">复合属性 <a class="header-anchor" href="#复合属性" aria-label="Permalink to &quot;复合属性&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">border: 粗细（默认3px）  样式  颜色</span></span></code></pre></div><h4 id="粗细" tabindex="-1">粗细 <a class="header-anchor" href="#粗细" aria-label="Permalink to &quot;粗细&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 5px;</span></span></code></pre></div><h4 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-sytle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: solid;         实线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              dashed;        虚线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              dotted;        点状线</span></span></code></pre></div><h4 id="颜色" tabindex="-1">颜色 <a class="header-anchor" href="#颜色" aria-label="Permalink to &quot;颜色&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: red;</span></span></code></pre></div><h3 id="内边距-padding" tabindex="-1">内边距-padding <a class="header-anchor" href="#内边距-padding" aria-label="Permalink to &quot;内边距-padding&quot;">​</a></h3><ul><li>元素设置内边距后，盒子在网页中的尺寸会撑大</li><li>希望保持元素的尺寸不变，要从宽高中减去相应的内边距</li><li>元素在网页中的尺寸=自身的宽高+内边距+边框</li><li>块元素未设置宽度时，宽度与父元素宽度一致，设置水平方向内边距会自动减去</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">padding: 上 右 下 左</span></span></code></pre></div><ul><li>一个值：上下左右</li><li>两个值：上下 左右</li><li>三个值：上 左右 下</li><li>四个值：上 右 下 左</li><li>可以通过 <code>padding: </code> 设置所有边框，不需要的单独设置为 <code>none</code></li></ul><h3 id="外边距-margin" tabindex="-1">外边距-margin <a class="header-anchor" href="#外边距-margin" aria-label="Permalink to &quot;外边距-margin&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">margin-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">margin-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">margin-bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">margin: 上 右 下 左</span></span></code></pre></div><ul><li>margin 的用法和值的顺序与 padding 一致</li><li><strong>设置水平方向外边距为 <code>auto</code> 可以实现块元素的水平居中</strong></li></ul><h3 id="标准盒子模型-默认" tabindex="-1">标准盒子模型（默认） <a class="header-anchor" href="#标准盒子模型-默认" aria-label="Permalink to &quot;标准盒子模型（默认）&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">content-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>元素设置内边距和边框后，会撑大盒子</li></ul><h3 id="怪异盒子模型-内减模式-css3" tabindex="-1">怪异盒子模型（内减模式，css3） <a class="header-anchor" href="#怪异盒子模型-内减模式-css3" aria-label="Permalink to &quot;怪异盒子模型（内减模式，css3）&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>当元素设置内边距和边框后，盒子大小不变，自动从内部减去</li></ul><h3 id="盒子阴影" tabindex="-1">盒子阴影 <a class="header-anchor" href="#盒子阴影" aria-label="Permalink to &quot;盒子阴影&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: XXpx XXpx XXpx XXpx COLOR inset;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            /*水平偏移 垂直偏移 模糊程度（可选） 扩展大小（可选） 内部阴影（可选，默认外部）*/</span></span></code></pre></div><h3 id="圆角属性" tabindex="-1">圆角属性 <a class="header-anchor" href="#圆角属性" aria-label="Permalink to &quot;圆角属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 左上（水平） 右上 左下 右下/左上（垂直） 右上 左下 右下</span></span></code></pre></div><ul><li>一个值：四个角同时设置</li><li>两个值：左上和右下 右上和左下</li><li>三个值：左上 右上和左下 右下</li><li>四个值：左上 右上 左下 右下</li><li>单位 px 或 %</li></ul><h2 id="高度问题" tabindex="-1">高度问题 <a class="header-anchor" href="#高度问题" aria-label="Permalink to &quot;高度问题&quot;">​</a></h2><h3 id="外边距合并" tabindex="-1">外边距合并 <a class="header-anchor" href="#外边距合并" aria-label="Permalink to &quot;外边距合并&quot;">​</a></h3><ul><li>垂直排列块元素，上方设置向下的外边距，下方设置向上的外边距，会造成外边距合并</li><li>外边距合并，值相同取该值，值不同取较大值</li></ul><h3 id="外边距塌陷" tabindex="-1">外边距塌陷 <a class="header-anchor" href="#外边距塌陷" aria-label="Permalink to &quot;外边距塌陷&quot;">​</a></h3><ul><li>嵌套的块元素，为第一个子元素设置向上的外边距，父元素会随子元素向下移动，出现上外边距塌陷</li><li>给父元素设置上边框，向上的 <code>padding</code> 或 <code>overflow</code> 属性可以解决外边距塌陷问题</li><li>父元素设置浮动或子元素设置浮动同样可以解决外边距塌陷问题</li></ul><h3 id="浮动高度塌陷" tabindex="-1">浮动高度塌陷 <a class="header-anchor" href="#浮动高度塌陷" aria-label="Permalink to &quot;浮动高度塌陷&quot;">​</a></h3><p>元素设置浮动后，若没有给父盒子设置高度，父盒子的高度为 0，之后的块元素会向上移动到浮动元素的下面，以下方式可以解决塌陷问题：</p><ul><li>父盒子设置固定高度</li><li>父盒子设置 <code>overflow: hidden;</code> 属性 <ul><li><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul></li></ul><p>overflow: hidden; 溢出隐藏 scroll; 溢出添加滚动条，未溢出显示滚动条 auto; 只有内容溢出才显示滚动条 \`\`\`</p><ul><li><code>overflow</code> 属性可以用来解决外边距塌陷和清除浮动带来的影响</li><li>浮动元素后添加块元素，设置 <code>clear: both;</code> 属性</li><li><code>::after</code> 伪元素选择器，不会添加额外标签 <ul><li><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul> .clearfix::after{ content: &quot;&quot;; display: block; clear: both; }<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span></code></pre></div></li></ul>`,38),n=[t];function h(p,d,o,r,c,k){return i(),a("div",null,n)}const E=s(l,[["render",h]]);export{u as __pageData,E as default};
