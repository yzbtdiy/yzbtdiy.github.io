import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.ByOCcFwP.js";const g=JSON.parse('{"title":"canvas 画布","description":"","frontmatter":{"title":"canvas 画布","date":"2020-02-11T15:00:26.000Z","categories":"html","tags":["canvas"]},"headers":[],"relativePath":"frontend/html/canvas.md","filePath":"frontend/html/canvas.md"}'),l={name:"frontend/html/canvas.md"},t=n(`<h2 id="canvas" tabindex="-1">canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;canvas&quot;">​</a></h2><ul><li><code>&lt;canvas&gt;</code> 标签是一个图形容器，需要使用 javascript 来绘制图形</li><li><code>&lt;canvas&gt;</code> 标签是 <code>inline-block</code> 元素，标签内部是浏览器不支持 <code>&lt;canvas&gt;</code> 标签时显示的内容</li><li><code>&lt;canvas&gt;</code> 元素默认宽度 300px，默认高度 150px，只能通过标签属性设置宽高，不能通过 css 设置（会改变像素的宽高比），不需要写单位，以像素计数</li></ul><h3 id="创建-canvas" tabindex="-1">创建 canvas <a class="header-anchor" href="#创建-canvas" aria-label="Permalink to &quot;创建 canvas&quot;">​</a></h3><p><strong>html 创建元素</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theCanvas&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    您的浏览器不支持canvas，推荐使用 Chrome 或 Firefox 等现代浏览器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#theCanvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yellowgreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>获取 js 对象</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取画布</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myCanvas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theCanvas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取渲染上下文（The rendering context），用来绘制或处理展示内容</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> painting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myCanvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="绘制图形" tabindex="-1">绘制图形 <a class="header-anchor" href="#绘制图形" aria-label="Permalink to &quot;绘制图形&quot;">​</a></h2><ul><li><code>fill</code> 与填充有关</li><li><code>storke</code> 与轮廓有关</li><li><code>rect</code> 与矩形有关</li><li>在原有 <code>fill</code> 基础上，<code>stroke</code> 里外均等分布</li></ul><h3 id="清空画布" tabindex="-1">清空画布 <a class="header-anchor" href="#清空画布" aria-label="Permalink to &quot;清空画布&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clearRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, myCanvas.width, myCanvas.height);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //清除区域起始行坐标，清除区域起始纵坐标，清除宽区域度，清除区域高度</span></span></code></pre></div><h3 id="颜色" tabindex="-1">颜色 <a class="header-anchor" href="#颜色" aria-label="Permalink to &quot;颜色&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//填充颜色，可以使用颜色单词，rgb，rgba，#HEX</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.fillStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//轮廓颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="线型-line-styles" tabindex="-1">线型（Line styles） <a class="header-anchor" href="#线型-line-styles" aria-label="Permalink to &quot;线型（Line styles）&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//线条粗细</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.lineWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//线条末端样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.lineCap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;butt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//方形结束</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                   &quot;round&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//圆形结束</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                   &quot;square&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //方形结束，增加半个矩形区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lineJoin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bevel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//相连部分添加额外三角形区域，每个部分有各自独立矩形拐角</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           &quot;round&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//相连部分添加额外扇形</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           &quot;miter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//相连部分边缘延伸，交于一点，形成额外菱形区域</span></span></code></pre></div><h3 id="绘制线段" tabindex="-1">绘制线段 <a class="header-anchor" href="#绘制线段" aria-label="Permalink to &quot;绘制线段&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//新建一条路径，与上一次路径断开连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//路径起始位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//闭合路径，路径结束点与起始点相连</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//通过线条绘制轮廓（可以不绘制轮廓）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//填充路径的闭合区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><ul><li>调用 <code>fill()</code> 函数时，所有没有闭合的形状都会自动闭合</li><li>调用 <code>closePath()</code> 函数时，没有闭合和形状不会自动闭合</li></ul><h3 id="绘制矩形" tabindex="-1">绘制矩形 <a class="header-anchor" href="#绘制矩形" aria-label="Permalink to &quot;绘制矩形&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//绘制填充矩形</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, width, height);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//绘制矩形路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strokeRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, width, height);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//清除矩形区域，使其透明</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clearRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, width, height);</span></span></code></pre></div><p>四个参数分别为：</p><ul><li>起始行坐标</li><li>起始纵坐标</li><li>矩形宽度</li><li>矩形高度</li></ul><h3 id="绘制圆" tabindex="-1">绘制圆 <a class="header-anchor" href="#绘制圆" aria-label="Permalink to &quot;绘制圆&quot;">​</a></h3><h4 id="圆弧" tabindex="-1">圆弧 <a class="header-anchor" href="#圆弧" aria-label="Permalink to &quot;圆弧&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arcTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x1, y1, x2, y2, radius);</span></span></code></pre></div><p>五个参数：</p><ul><li>第一个控制点行坐标（切线交点）</li><li>第一个控制点纵坐标（切线交点）</li><li>第二个控制点行坐标（另一侧切点）</li><li>第二个控制点纵坐标（另一侧切点）</li><li>半径</li></ul><h4 id="圆" tabindex="-1">圆 <a class="header-anchor" href="#圆" aria-label="Permalink to &quot;圆&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, radius, startAngle, endAngle, anticlockwise);</span></span></code></pre></div><p>六个参数：</p><ul><li>圆心行坐标</li><li>圆心纵坐标</li><li>半径</li><li>起始弧度（弧度 = 角度 * Math.PI / 180）</li><li>结束弧度</li><li>是否逆时针（默认 false 顺时针，true 逆时针）</li></ul><h2 id="图形变换" tabindex="-1">图形变换 <a class="header-anchor" href="#图形变换" aria-label="Permalink to &quot;图形变换&quot;">​</a></h2><h3 id="位移" tabindex="-1">位移 <a class="header-anchor" href="#位移" aria-label="Permalink to &quot;位移&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y);</span></span></code></pre></div><p><strong>translate 会重新映射画布上的 (0,0) 位置，也就是对坐标轴进行位移</strong></p><p>两个参数：</p><ul><li>水平偏移量</li><li>垂直偏移量</li></ul><h3 id="旋转" tabindex="-1">旋转 <a class="header-anchor" href="#旋转" aria-label="Permalink to &quot;旋转&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(angle);</span></span></code></pre></div><p><strong>rotate 会对坐标轴进行旋转</strong></p><ul><li>一个参数：弧度（弧度 = 角度 * Math.PI / 180）</li></ul><h3 id="缩放" tabindex="-1">缩放 <a class="header-anchor" href="#缩放" aria-label="Permalink to &quot;缩放&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">painting.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scalewidth,scaleheight);</span></span></code></pre></div><p><strong>scale 缩放整个坐标系</strong></p><p>两个参数：</p><ul><li>行向缩放比例（1 为 100%）</li><li>纵向缩放比例</li></ul>`,47),h=[t];function e(p,k,d,r,o,c){return a(),i("div",null,h)}const y=s(l,[["render",e]]);export{g as __pageData,y as default};
