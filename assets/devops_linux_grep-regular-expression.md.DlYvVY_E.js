import{_ as t,c as d,o as e,a5 as r}from"./chunks/framework.ByOCcFwP.js";const _=JSON.parse('{"title":"grep 正则表达式","description":"","frontmatter":{"title":"grep 正则表达式","date":"2019-07-20T11:28:51.000Z","categories":"linux","tags":["grep","regular"]},"headers":[],"relativePath":"devops/linux/grep-regular-expression.md","filePath":"devops/linux/grep-regular-expression.md"}'),o={name:"devops/linux/grep-regular-expression.md"},a=r('<h2 id="grep-选项" tabindex="-1">grep 选项 <a class="header-anchor" href="#grep-选项" aria-label="Permalink to &quot;grep 选项&quot;">​</a></h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-v</td><td>反转匹配</td></tr><tr><td>-n</td><td>显示行号</td></tr><tr><td>-R</td><td>递归目录下所有文件</td></tr><tr><td>-A</td><td>正则表达式匹配项之后的行数</td></tr><tr><td>-B</td><td>正则表达式匹配项之前的行数</td></tr><tr><td>-e</td><td>使用多个 -e 选项可以提供多个正则表达式</td></tr><tr><td>-E</td><td>使用 egrep</td></tr><tr><td>-F</td><td>使用 fgrep</td></tr></tbody></table><h3 id="_1-字符匹配" tabindex="-1">1. 字符匹配 <a class="header-anchor" href="#_1-字符匹配" aria-label="Permalink to &quot;1. 字符匹配&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配项</th></tr></thead><tbody><tr><td><code>.</code></td><td>任意单个字符</td></tr><tr><td><code>[]</code></td><td><code>[]</code> 内任意单个字符</td></tr><tr><td><code>[^]</code></td><td>除了 <code>[]</code> 内任意单个字符</td></tr><tr><td><code>[[:alnum:]]</code></td><td>小写 a-z，大写 A-Z，数字 0-9 范围内任意单个字符</td></tr><tr><td><code>[[:alpha:]]</code></td><td>小写 a-z 和 大写 A-Z 范围内任意单个字符</td></tr><tr><td><code>[a-z]</code> 或 <code>[[:lower:]]</code></td><td>小写 a-z 范围内任意单个字符</td></tr><tr><td><code>[A-Z]</code> 或 <code>[[:upper:]]</code></td><td>大写 A-Z 范围内任意单个字符</td></tr><tr><td><code>[[:digit:]]</code></td><td>数字 0-9 范围内任意单个字符</td></tr><tr><td><code>[[:punct:]]</code></td><td>除空格和字母数字以外的任何可打印字符</td></tr></tbody></table><h3 id="_2-次数匹配" tabindex="-1">2. 次数匹配 <a class="header-anchor" href="#_2-次数匹配" aria-label="Permalink to &quot;2. 次数匹配&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配前一个字符任意次，&gt;=0 次</td></tr><tr><td><code>\\?</code></td><td>匹配前一个字符 0 或 1 次</td></tr><tr><td><code>\\+</code></td><td>匹配前一个字符大于等于 1 次</td></tr><tr><td><code>\\{\\}</code></td><td><code>\\{m\\}</code> 匹配前一个字符 m 次，<code>\\{m,n\\}</code> 匹配前一个字符 m 到 n 次，<br><code>\\{m,\\}</code> 匹配前一个字符 &gt;= m 次，<code>\\{0,n\\}</code> 匹配前一个字符 &lt;= n 次</td></tr></tbody></table><h3 id="_3-位置锚定" tabindex="-1">3. 位置锚定 <a class="header-anchor" href="#_3-位置锚定" aria-label="Permalink to &quot;3. 位置锚定&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td><code>^</code></td><td>行首定位符</td></tr><tr><td><code>$</code></td><td>行尾定位符</td></tr><tr><td><code>^$</code></td><td>空白行</td></tr><tr><td><code>\\&lt;char</code></td><td>起始字界符，或使用 <code>\\bchar</code></td></tr><tr><td><code>char\\&gt;</code></td><td>结束字界符，或使用 <code>char\\b</code></td></tr></tbody></table><h3 id="_4-分组" tabindex="-1">4. 分组 <a class="header-anchor" href="#_4-分组" aria-label="Permalink to &quot;4. 分组&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td><code>\\(\\)</code></td><td>匹配 <code>\\(\\)</code> 连续字符串，而不是单个字符</td></tr><tr><td><code>\\|</code></td><td>或者，匹配 \\| 左侧或右侧字符串</td></tr></tbody></table><h2 id="egrep" tabindex="-1">egrep <a class="header-anchor" href="#egrep" aria-label="Permalink to &quot;egrep&quot;">​</a></h2><p>egrep 使用扩展正则表达式，相当于 grep -E，用法基本与 grep 相同，只是某些符号不需要转义。</p><h3 id="_1-次数匹配" tabindex="-1">1. 次数匹配 <a class="header-anchor" href="#_1-次数匹配" aria-label="Permalink to &quot;1. 次数匹配&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td><code>?</code></td><td>匹配前一个字符 0 或 1 次</td></tr><tr><td><code>+</code></td><td>匹配前一个字符大于 1 次</td></tr><tr><td><code>{}</code></td><td><code>{m}</code> 匹配前一个字符 m 次，<code>{m,n}</code> 匹配前一个字符 m 到 n 次，<br><code>{m,}</code> 匹配前一个字符 &gt;= m 次，<code>{0,n}</code> 匹配前一个字符 &lt;= n 次</td></tr></tbody></table><h3 id="_2-分组" tabindex="-1">2. 分组 <a class="header-anchor" href="#_2-分组" aria-label="Permalink to &quot;2. 分组&quot;">​</a></h3><table><thead><tr><th>符号</th><th>匹配内容</th></tr></thead><tbody><tr><td><code>()</code></td><td>匹配 <code>()</code> 连续字符串，而不是单个字符</td></tr><tr><td><code>|</code></td><td>或者，匹配 | 左侧或右侧字符串</td></tr></tbody></table><h2 id="fgrep" tabindex="-1">fgrep <a class="header-anchor" href="#fgrep" aria-label="Permalink to &quot;fgrep&quot;">​</a></h2><p>fgrep 将查找内容视为固定字符串，相当于 grep -F。</p>',18),c=[a];function h(l,n,i,p,s,b){return e(),d("div",null,c)}const u=t(o,[["render",h]]);export{_ as __pageData,u as default};
