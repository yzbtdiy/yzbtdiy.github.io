import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.ByOCcFwP.js";const g=JSON.parse('{"title":"javascript 基础","description":"","frontmatter":{"title":"javascript 基础","date":"2019-12-17T18:32:39.000Z","categories":"javascript","tags":["javaScript","basics"]},"headers":[],"relativePath":"frontend/javascript/basics.md","filePath":"frontend/javascript/basics.md"}'),l={name:"frontend/javascript/basics.md"},n=t(`<h2 id="javascript-简介" tabindex="-1">javascript 简介 <a class="header-anchor" href="#javascript-简介" aria-label="Permalink to &quot;javascript 简介&quot;">​</a></h2><ul><li>javascript 于 1995 年由 Netscape（网景公司）的 布莱登·艾奇 耗时 10 天开发</li><li>javascript 是一门 <strong>动态</strong>，<strong>弱类型</strong>，<strong>解释型</strong>，<strong>面向对象</strong> 的 <strong>脚本语言</strong><ul><li>动态：程序执行时才会确定数据类型</li><li>弱类型：数据类型不确定，可以随时改变</li><li>解释型：程序运行不需要编译，通过解释器逐行执行</li><li>编译型：程序需要使用编译器转化成二进制可执行文件运行</li><li>脚本：通常可以嵌入其他语言中执行</li></ul></li><li>javascript 最初名为 livescript，后来改名 javascript，借助当时流行的 java 语言的名字很快得到广泛使用，其本身与 java 语言没有任何关系</li><li>最初用于网页的表单验证，目前用于用户交互，游戏开发，后端开发（node.js）</li></ul><h2 id="javascript-实现组成部分" tabindex="-1">javascript 实现组成部分 <a class="header-anchor" href="#javascript-实现组成部分" aria-label="Permalink to &quot;javascript 实现组成部分&quot;">​</a></h2><ul><li>ECMAscript javascript 核心（提供语法、类型、语句、关键字、保留字、操作符、对象等核心语言功能 ）</li><li>DOM Document Object Model 文档对象模型（提供访问和操作网页内容的方法和接口 ）</li><li>BOM Browser Object Model 浏览器对象模型（提供与浏览器交互的方法和接口 ）</li></ul><h2 id="javascript-书写位置" tabindex="-1">javascript 书写位置 <a class="header-anchor" href="#javascript-书写位置" aria-label="Permalink to &quot;javascript 书写位置&quot;">​</a></h2><h3 id="行内式" tabindex="-1">行内式 <a class="header-anchor" href="#行内式" aria-label="Permalink to &quot;行内式&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onclick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(&#39;inline js message!&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>代码分离性差，可读性差，只能针对事件添加，局限性大</li></ul><h3 id="内嵌式" tabindex="-1">内嵌式 <a class="header-anchor" href="#内嵌式" aria-label="Permalink to &quot;内嵌式&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/javascript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;embed js message!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);			</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>通常写在 body 底部，也可以写在 head 内</li></ul><h3 id="外链式" tabindex="-1">外链式 <a class="header-anchor" href="#外链式" aria-label="Permalink to &quot;外链式&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/javascript&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;js/print.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>js/print.js</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;external js message!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><ul><li>实现代码分离，但外链式 script 标签内部书写 js 代码无效</li></ul><h2 id="javascript-输出语句" tabindex="-1">javascript 输出语句 <a class="header-anchor" href="#javascript-输出语句" aria-label="Permalink to &quot;javascript 输出语句&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//弹出框显示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pop-up box message!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//控制台输出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;log message!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//网页内容展示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body message!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,18),e=[n];function h(p,k,r,d,o,c){return a(),i("div",null,e)}const u=s(l,[["render",h]]);export{g as __pageData,u as default};
